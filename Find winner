
competitionGT=function(players, path, download=TRUE){

#Set errortest default value
errortest=NA

#Initialize file count
k=1

#Create file references
maxFiles=2000
filenames=vector()
filenames[1]=paste(path, "/report.csv", sep="")
for(i in 1:maxFiles) filenames[i+1]=paste(path, "/report(", i, ").csv", sep="")

scoreBoard=as.data.frame(matrix(NA, 0, 3))
colnames(scoreBoard)=c("Round", "Player", "Score")

#File selector k
k=length(list.files(path))+1

#Set initial value for round winner
roundWinner=as.character(players[1,1])

#Start competition
for(i in seq(2, nrow(players), by=4)){

#roundWinner always participates in the competition
query=roundWinner

#Select batch of four players to go up against the roundWinner. The min function ensures that there are no empty slots
batch=players[i:min((i+3),nrow(players)),1]

#If the files haven't been downloaded already, create Google Trends query, download and import file
 if(download=TRUE){
  for(j in 1:length(batch)) query=paste(query, "%2C ", batch[j], sep="")
  URL=paste("http://www.google.com/trends/trendsReport?hl=en-US&q=", query,"&cmpt=q&content=1&export=1", sep="")
  browseURL(URL)


  Sys.sleep(4)

#Error handler. Try do read file. If it fails, wait 8 seconds. If it fails again, wait 8 seconds more.
  errortest=tryCatch(
   read.csv(filenames[k], header=FALSE, blank.lines.skip=FALSE, stringsAsFactors=FALSE),
   error=function(e) e
  )

  if(inherits(errortest, "error")){
   Sys.sleep(8)
  }

  errortest=tryCatch(
   read.csv(filenames[k], header=FALSE, blank.lines.skip=FALSE, stringsAsFactors=FALSE),
   error=function(e) e
  )

  if(inherits(errortest, "error")){
   Sys.sleep(8)
  }
 }

#Make sure that the files can be loaded. If not, skip this iteration
if(!inherits(errortest, "error")){
players.raw=read.csv(filenames[k], header=FALSE, blank.lines.skip=FALSE, stringsAsFactors=FALSE)


#Initialize results
results=data.frame(matrix(NA, (nrow=length(players.raw)-1), ncol=3))
results[,1]=k
for(i in 1:(ncol(players.raw)-1)) results[i,2]=players.raw[5,i+1]
for(i in 1:(ncol(players.raw)-1)) results[i,3]=as.numeric(as.character(players.raw[(which(players.raw=="")[2]-2),i+1]))

highScore=max(results[,3])

colnames(results)=c("Round", "Player", "Score")

roundWinner=results[which(results[,3]==highScore),2]
scoreBoard=rbind(scoreBoard, results)

k=k+1 #Move file selector one step forward


winner=data.frame("Winner", roundWinner, highScore)
colnames(winner)=c("Round", "Player", "Score")
scoreBoard=rbind(scoreBoard, winner)
}
}
return(scoreBoard)
}

setwd("C:/Users/erik.johansson/Dropbox/Google Trends")
path.capitals="Capitals/GT data"
path.capitals2="Capitals/European capitals.csv"

pathData.brands="Top 10 brands/Data"
pathPlayers.brands="Top 10 brands/500 most valuable.csv"

pathPlayers=pathPlayers.brands
pathData=pathData.brands

players=read.csv(pathPlayers, sep=";")
podiumSize=3
round=list()
for(i in 1:podiumSize){
 

players=players[-which(tolower(players[,1])==round[[i]][nrow(round[[i]]),2]),]
}

scoreBoard=data.frame(1:10)
for(i in 1:podiumSize) scoreBoard[i,2]=round[[i]][which(round[[i]][,1]=="Winner"),2]
colnames(scoreBoard)=c("Rank", "Capital")
